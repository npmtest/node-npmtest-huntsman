{"/home/travis/build/npmtest/node-npmtest-huntsman/test.js":"/* istanbul instrument in package npmtest_huntsman */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-huntsman/lib.npmtest_huntsman.js":"/* istanbul instrument in package npmtest_huntsman */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_huntsman = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_huntsman = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-huntsman/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-huntsman && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_huntsman */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_huntsman\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_huntsman.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_huntsman.rollup.js'] =\n            local.assetsDict['/assets.npmtest_huntsman.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_huntsman.__dirname + '/lib.npmtest_huntsman.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-huntsman/node_modules/huntsman/index.js":"\nfunction loadModule( mod ){\n  return function(){\n    var args = Array.prototype.slice.call( arguments, 0 );\n    var module = require( './lib/' + mod + '/' + args.shift() );\n    return module.apply( module, args );\n  };\n}\n\nmodule.exports = {\n  spider: require( './lib/huntsman' ),\n  proxy: loadModule( 'proxy' ),\n  extension: loadModule( 'extension' ),\n  storage: loadModule( 'storage' )\n};","/home/travis/build/npmtest/node-npmtest-huntsman/node_modules/huntsman/lib/huntsman.js":"\nvar async = require('async');\nvar EventEmitter = require('regexemitter');\n\n// # Alternatives\n// # https://github.com/sylvinus/node-crawler/blob/master/lib/crawler.js\n// # https://github.com/cgiffard/node-simplecrawler/blob/master/lib/crawler.js\n\n// # TODO:\n// tests for extensions\n// TTL for storage\n// Persistent queue examples\n\nmodule.exports = function( options ){\n\n  var huntsman = new EventEmitter();\n\n  // Allow undefined callbacks\n  // @todo add unit test for this\n  huntsman.on = function( event, cb ){\n    EventEmitter.prototype.on.call( this, event, cb || function(){} );\n  }\n\n  huntsman.options = options || {};\n  huntsman.options.throttle = huntsman.options.throttle || 10;\n  huntsman.options.timeout = huntsman.options.timeout || 5000;\n  huntsman.proxy = huntsman.options.proxy || new (require('./proxy/http'))();\n  huntsman.queue = huntsman.options.queue || new (require('./Queue'))();\n  huntsman.extensions = [];\n  huntsman.loop = function(){};\n  huntsman.updated = new Date().getTime() + huntsman.options.timeout;\n\n  // Extensions\n  huntsman.on( 'HUNTSMAN_RESPONSE', function( err, res ){\n    if( err ) huntsman.emit( 'HUNTSMAN_ERROR', 'response error' + err.toString('utf8') );\n    huntsman.updated = new Date().getTime();\n    async.parallel( huntsman.extensions.map( function( extension ){\n      return async.apply( extension, huntsman, err, res );\n    }), function( err, results ){\n      if( err ) huntsman.emit( 'HUNTSMAN_ERROR', 'extension error' + err.toString('utf8') );\n      res.extension = {};\n      if( Array.isArray( results ) ){\n        results.forEach( function( result ){\n          for( var key in result ){ res.extension[ key ] = result[ key ]; }\n        });\n      }\n      huntsman.emit.call( huntsman, res.uri, err, res );\n    });\n  });\n\n  huntsman.next = function( isSeed ){\n    var uri = huntsman.queue.shift();\n    if( 'string' === typeof( uri ) ){\n      if( true === isSeed || huntsman.match( uri ) ){\n        huntsman.proxy( uri, function( err, res ){\n          huntsman.emit( 'HUNTSMAN_RESPONSE', err, res );\n        });\n      }\n      else console.log( '[skip] uri cannot be matched to callback', uri );\n    } else if (( new Date().getTime() - huntsman.options.timeout ) > huntsman.updated ){\n      huntsman.stop();\n    }\n  };\n\n  huntsman.wait = function( waitms ){\n    huntsman.stop();\n    setTimeout( huntsman.start, waitms );\n    console.error( 'waiting: ' + waitms + ' ms' );\n  };\n\n  huntsman.stop = function(){\n    console.error( 'spider stop' );\n    clearInterval( huntsman.loop );\n    huntsman.emit( 'HUNTSMAN_EXIT' );\n  };\n\n  huntsman.start = function(){\n    if( huntsman.queue.count() === 0 ) return console.error( 'no uri in queue' );\n    huntsman.loop = setInterval( huntsman.next, 1000 / huntsman.options.throttle );\n    huntsman.next( true );\n  };\n\n  return huntsman;\n};\n","/home/travis/build/npmtest/node-npmtest-huntsman/node_modules/huntsman/lib/link.js":"\nvar resolve = require( './resolve' );\n\nvar pattern = {\n  search: /a([^>]+)href\\s?=\\s?['\"]([^\"'#]+)/gi,\n  refine: /['\"]([^\"'#]+)$/,\n  filter: /^https?:\\/\\//\n};\n\n// resolve relative uris\nmodule.exports.resolver = function( uri, baseUri ) {\n  if( ( 'string' !== typeof uri ) || !uri.length ) throw new Error( 'invalid uri' );\n  return baseUri ? resolve( baseUri, uri ) : uri;\n};\n\n// remove trailing slash\nmodule.exports.normaliser = function( uri ) {\n  if( ( 'string' !== typeof uri ) || !uri.length ) throw new Error( 'invalid uri' );\n  return uri.replace( '/?', '?' )\n            .replace( '/#', '#' )\n            .replace( /\\/$/, '' );\n};\n\nmodule.exports.extractor = function( uri, body, options ) {\n\n  var links = [];\n\n  // accept a list of regex patterns to match & allow custom link normaliser\n  if( !options ) options = {};\n  if( !options.pattern ) options.pattern = {};\n  if( !options.pattern.search ) options.pattern.search = pattern.search;\n  if( !options.pattern.refine ) options.pattern.refine = pattern.refine;\n  if( !options.pattern.filter ) options.pattern.filter = pattern.filter;\n  if( !options.resolver ) options.resolver = module.exports.resolver;\n  if( !options.normaliser ) options.normaliser = module.exports.normaliser;\n  if( 'boolean' !== typeof options.unique ) options.unique = true;\n\n  // match all patterns and extract links\n  var matches = body.match( options.pattern.search );\n  if( Array.isArray( matches ) ){\n    links = links.concat( matches.filter( String ).map( function( link ){\n      return link.match( options.pattern.refine )[1];\n    }));\n  }\n\n  // resolve links\n  if( options.resolver ){\n    links = links.map( function( link ){\n      return options.resolver( link, uri );\n    });\n  }\n\n  // normalise links\n  if( options.normaliser ){\n    links = links.map( function( link ){\n      return options.normaliser( link );\n    });\n  }\n\n  // filter domains\n  if( options.pattern.filter ){\n    links = links.filter( function( link ){\n      return link.match( options.pattern.filter );\n    });\n  }\n\n  // remove duplicates\n  if( options.unique ){\n    links = links.filter( function( value, index ) {\n      return links.indexOf( value ) === index;\n    });\n  }\n\n  return links;\n};","/home/travis/build/npmtest/node-npmtest-huntsman/node_modules/huntsman/lib/resolve.js":"/*jslint regexp: true, white: true, maxerr: 50, indent: 2 */\n\n// unit tested at\n// http://skew.org/uri/uri_tests.html\n\nfunction parseURI(url) {\n  var m = String(url).replace(/^\\s+|\\s+$/g, '').match(/^([^:\\/?#]+:)?(\\/\\/(?:[^:@]*(?::[^:@]*)?@)?(([^:\\/?#]*)(?::(\\d*))?))?([^?#]*)(\\?[^#]*)?(#[\\s\\S]*)?/);\n  // authority = '//' + user + ':' + pass '@' + hostname + ':' port\n  return (m ? {\n    href     : m[0] || '',\n    protocol : m[1] || '',\n    authority: m[2] || '',\n    host     : m[3] || '',\n    hostname : m[4] || '',\n    port     : m[5] || '',\n    pathname : m[6] || '',\n    search   : m[7] || '',\n    hash     : m[8] || ''\n  } : null);\n}\n\nvar absolutizeURI = function absolutizeURI(base, href) {// RFC 3986\n\n  function removeDotSegments(input) {\n    var output = [];\n    input.replace(/^(\\.\\.?(\\/|$))+/, '')\n         .replace(/\\/(\\.(\\/|$))+/g, '/')\n         .replace(/\\/\\.\\.$/, '/../')\n         .replace(/\\/?[^\\/]*/g, function (p) {\n      if (p === '/..') {\n        output.pop();\n      } else {\n        output.push(p);\n      }\n    });\n    return output.join('').replace(/^\\//, input.charAt(0) === '/' ? '/' : '');\n  }\n\n  href = parseURI(href || '');\n  base = parseURI(base || '');\n\n  return !href || !base ? null : (href.protocol || base.protocol) +\n         (href.protocol || href.authority ? href.authority : base.authority) +\n         removeDotSegments(href.protocol || href.authority || href.pathname.charAt(0) === '/' ? href.pathname : (href.pathname ? ((base.authority && !base.pathname ? '/' : '') + base.pathname.slice(0, base.pathname.lastIndexOf('/') + 1) + href.pathname) : base.pathname)) +\n         (href.protocol || href.authority || href.pathname ? href.search : (href.search || base.search)) +\n         href.hash;\n};\n\nmodule.exports = absolutizeURI;","/home/travis/build/npmtest/node-npmtest-huntsman/node_modules/huntsman/lib/Queue.js":"\nfunction Queue( isUnique ){\n  this.data = [];\n  this.complete = [];\n  this.isUnique = ( 'boolean' === typeof isUnique ) ? isUnique : true;\n}\n\nQueue.prototype.has = function( key ){\n  return( 0 <= this.data.indexOf( key ) );\n};\n\nQueue.prototype.count = function(){\n  return this.data.length;\n};\n\nQueue.prototype.add = function( key ){\n  if( !this.isUnique || ( -1 === this.complete.indexOf( key ) && !this.has( key ) ) ){\n    this.data.push( key );\n    return true;\n  }\n  return false;\n};\n\nQueue.prototype.remove = function( key ){\n  if( this.isUnique ){\n    this.data = this.data.filter( function( elem ){\n      return( elem !== key );\n    });\n  }\n  else {\n    var i = this.data.indexOf( key );\n    if( i > -1 ){\n      this.data.splice( i, 1 );\n    }\n  }\n};\n\nQueue.prototype.shift = function(){\n  val = this.data.shift();\n  if( val ) this.complete.push( val );\n  return val;\n};\n\nQueue.prototype.pop = function(){\n  val = this.data.pop();\n  if( val ) this.complete.push( val );\n  return val;\n};\n\nmodule.exports = Queue;","/home/travis/build/npmtest/node-npmtest-huntsman/node_modules/huntsman/lib/extension/cheerio.js":"\nvar cheerio = require('cheerio');\n\nmodule.exports = function( options ){\n  return function( huntsman, err, res, cb ){\n    if( !err && 'string' === typeof( res.body ) ){\n      if( res.body.match( /^\\s*</ ) ){\n        if( !options ) options = { lowerCaseTags: true, lowerCaseAttributeNames: true };\n        return cb( null, { 'cheerio' : cheerio.load( res.body, options ) } );\n      }\n    }\n    return cb();\n  };\n};","/home/travis/build/npmtest/node-npmtest-huntsman/node_modules/huntsman/lib/extension/json.js":"\nmodule.exports = function( options ){\n  return function( huntsman, err, res, cb ){\n    if( !err && 'string' === typeof( res.body ) ){\n      if( res.body.match( /^\\s*[{\\[]/ ) ){\n        if( !options ) options = {};\n        try {\n          return cb( null, { 'json' : JSON.parse( res.body, options ) } );\n        }\n        catch( e ){\n          return cb();\n        }\n      }\n    }\n    return cb();\n  };\n};","/home/travis/build/npmtest/node-npmtest-huntsman/node_modules/huntsman/lib/extension/links.js":"\nvar link = require( '../link' );\n\nmodule.exports = function(){\n  return function( huntsman, err, res, cb ){\n    if( !err && 'string' === typeof( res.body ) ){\n      if( res.body.match( /^\\s*</ ) ){\n        return cb( null, {\n          links: function( options ){\n            return link.extractor.apply( null, [ res.uri, res.body, options ] );\n          }\n        });\n      }\n    }\n    return cb();\n  };\n};","/home/travis/build/npmtest/node-npmtest-huntsman/node_modules/huntsman/lib/extension/ratelimit.js":"\n/*\n  rate limit extension designed to backoff according to the github api rate limiting headers\n  http://developer.github.com/v3/#rate-limiting\n*/\n\nmodule.exports = function( options ){\n  return function( huntsman, err, res, cb ){\n\n    // detect when we get rate limited\n    if( res && res.headers && 'x-ratelimit-remaining' in res.headers ){\n      var restored = parseInt( res.headers[ 'x-ratelimit-reset' ], 10 ) * 1000;\n      var ratelimit = {\n        used: res.headers[ 'x-ratelimit-remaining' ] + ' / ' + res.headers[ 'x-ratelimit-limit' ],\n        wait: Math.round( ( restored - new Date().getTime() ) / 1000 / 60 ) + ' mins'\n      };\n      console.error( '------- rate limit -------' );\n      console.error( 'rate limit remaining: ', ratelimit.used );\n\n      if( res.headers[ 'x-ratelimit-remaining' ] === '0' ){\n        console.error( 'rate limit restored: ' + new Date( restored ) );\n        console.error( 'rate limit wait: ' + ratelimit.wait );\n        huntsman.queue.add( res.uri ); // retry uri\n\n        // backoff until ratelimit is restored\n        huntsman.wait( restored - new Date().getTime() );\n      }\n      console.error( '----------------------' );\n    }\n\n    return cb();\n  };\n};","/home/travis/build/npmtest/node-npmtest-huntsman/node_modules/huntsman/lib/extension/recurse.js":"\nvar link = require( '../link' );\n\nmodule.exports = function( options ){\n  return function( huntsman, err, res, cb ){\n    if( !err && 'string' === typeof( res.body ) ){\n      var links = link.extractor( res.uri, res.body, options );\n      if( Array.isArray( links ) ){\n        links.forEach( function( link ){\n          if( huntsman.match( link ) ){\n            huntsman.queue.add( link );\n          }\n        });\n      }\n    }\n    return cb();\n  };\n};","/home/travis/build/npmtest/node-npmtest-huntsman/node_modules/huntsman/lib/extension/stats.js":"\nvar stats = { errors: 0, success: 0, codes: {} };\nvar lastResponse = new Date().getTime();\nvar rps = { prev: 0, now: 0 };\nvar log = { prev: '', now: '' };\nvar bytes = { prev: 0, now: 0, total: 0 };\n\nvar pollInterval = setInterval( function(){\n  bytes.prev = bytes.now;\n  rps.prev = rps.now;\n  bytes.now = rps.now = 0;\n\n  // Clear interval after 10 seconds of inactivity\n  if( ( new Date().getTime() - 10000 ) > ( lastResponse ) ){\n    clearInterval( pollInterval );\n  }\n}, 1000 );\n\nvar emit = function( emitter, res, options ){\n\n  log.prev = log.now;\n  log.now = '';\n  if( emitter.queue ) log.now += ' \\x1b[1;34mQueued\\x1b[0;34m:' + emitter.queue.data.length + '\\x1b[0m';\n  log.now += ' \\x1b[1;32m✓\\x1b[0;32m ' + stats.success + '\\x1b[0m';\n  log.now += ' \\x1b[1;31m✘\\x1b[1;31m ' + stats.errors + '\\x1b[0m';\n\n  rps.now++;\n  log.now += ' \\x1b[1;33m⌚\\x1b[0;33m ' + ( rps.prev || 0 ) + '\\x1b[0m';\n\n  // log.now += ' \\x1b[1;33m:\\x1b[0;33m ' + Math.round( bytes.total / 1048576 ) + 'mb\\x1b[0m';\n  // log.now += ' \\x1b[1;33m:\\x1b[0;33m ' + Math.round( bytes.prev / 1048576 ) + 'mb/s\\x1b[0m';\n  log.now += '\\x1b[1;10m :\\x1b[0m ' + res.uri;\n\n  if( options && options.tail ){\n    process.stderr.write( '\\r' + log.now );\n    if( log.prev.length > log.now.length ){\n      process.stderr.write( new Array( log.prev.length - log.now.length + 1 ).join( ' ' ) );\n    }\n  }\n  else process.stderr.write( log.now + '\\n' );\n};\n\nmodule.exports = function( options ){\n  return function( huntsman, err, res, cb ){\n\n    lastResponse = new Date().getTime();\n\n    if( err ) stats.errors++;\n    else stats.success++;\n\n    if( !( res.statusCode in stats.codes ) ) stats.codes[ res.statusCode ] = 0;\n    stats.codes[ res.statusCode ]++;\n\n    if( 'string' === typeof( res.body ) ){\n      bytes.now += res.body.length;\n      bytes.total += res.body.length;\n    }\n    emit( huntsman, res, options );\n\n    return cb();\n  };\n};","/home/travis/build/npmtest/node-npmtest-huntsman/node_modules/huntsman/lib/proxy/http.js":"\nvar request = require( 'superagent' ).agent();\nvar version = require( '../../package' ).version;\n\nmodule.exports = function( options ){\n  if( !options ) options = {};\n  if( !options.store ) options.store = ( require( '../storage/null' ) )();\n  return function( uri, cb ){\n    var hit = options.store.get( uri );\n    if( hit ) return cb.apply( null, hit );\n    request.get( uri )\n           .set( 'User-Agent', 'huntsman/' + version )\n           .end( function( err, res ) {\n      if( err ) return cb( err, { uri: uri } );\n      var result = [ err, {\n        uri: uri,\n        statusCode: res.status,\n        headers: res.header,\n        body: res.text || ''\n      } ];\n      options.store.set( uri, result );\n      return cb.apply( null, result );\n    });\n  };\n};","/home/travis/build/npmtest/node-npmtest-huntsman/node_modules/huntsman/lib/storage/filesystem.js":"\nvar fs = require('fs');\nvar path = require('path');\nvar cache = require('./memory');\nvar store = cache();\n\nmodule.exports = function( filename, options, errorback ){\n\n  if( 'string' !== typeof filename ) throw new Error( 'invalid file name' );\n  if( 'object' !== typeof options || !options ) options = {};\n  if( 'function' !== typeof errorback ) errorback = console.error;\n\n  var filestore = {\n    synced: false,\n    get: function( key ){\n      return store.get( key );\n    },\n    set: function( key, value ){\n      filestore.synced = false;\n      store.set( key, value );\n    },\n    del: function( key ){\n      filestore.synced = false;\n      store.del( key );\n    },\n    read: function(){\n\n      var path = null;\n      try { path = path.resolve( filename ); }\n      catch( e ){ return errorback( e ); }\n\n      if( path )\n      fs.stat( path, function( err, stats ){\n        if( err ) return errorback( err );\n        fs.readFile( path, function( err, data ){\n          if( err ) return errorback( err );\n          store = cache( JSON.parse( data ) );\n          filestore.synced = true;\n        });\n      });\n    },\n    write: function(){\n      if( !filestore.synced ){\n        fs.writeFile( path.resolve( filename ), JSON.stringify( filestore.data ), function( err ){\n          if( err ) throw new Error( err );\n          filestore.synced = true;\n        });\n      }\n    }\n  };\n\n  if( options.writeInterval ){\n    setInterval( filestore.write, options.writeInterval );\n  }\n\n  filestore.read();\n  return filestore;\n};","/home/travis/build/npmtest/node-npmtest-huntsman/node_modules/huntsman/lib/storage/memory.js":"\nmodule.exports = function( init ){\n\n  var memorystore = {\n    store: ( 'object' === typeof init ) ? init : {},\n    get: function( key ){\n      return memorystore.store[ key ];\n    },\n    set: function( key, value ){\n      memorystore.store[ key ] = value;\n    },\n    del: function( key ){\n      delete memorystore.store[ key ];\n    }\n  };\n\n  return memorystore;\n};","/home/travis/build/npmtest/node-npmtest-huntsman/node_modules/huntsman/lib/storage/null.js":"\nmodule.exports = function(){\n  return {\n    get: function(){\n      return null;\n    },\n    set: function(){\n      return null;\n    },\n    del: function(){\n      return null;\n    }\n  };\n};"}